/* Functions */

@function prc($target, $container) {
  @return ($target / $container);
}

@function half($grid-value) {
  @return ($grid-value / 2);
}

@function weekDay($grid-value) {
  @return ($grid-value / 7);
}


/* Variables */

$grid-margin-pixel: 5px;
$container-size:960px;
$grid-margin-divided:prc($container-size, $grid-margin-pixel);
$grid-margin-percent:prc(100, $grid-margin-divided);

/* Mixins */

@mixin grid_x($size:$container-size,$cols:$grid-columns) {

  $grids: null;
  $grids-nomargin: null;
  $grid-instance-size: prc($size, $cols);
  $stuckMargin: half($size) + 1;

  @for $i from 1 through $cols{

    @if $size < 481px{
      @if $size < 321px{
          .grid_#{$i} {
             width: $size - $grid-margin-pixel * 2;
           } 
                
      } @else {    	    
        $grid-half: half($i);      
        @if $grid-half > 6{ 
          .grid_#{$i} {
             width: $size - $grid-margin-pixel * 2;
           } 
           
           }@else{
            .grid_#{$i} {
               width: half($size)  - $grid-margin-pixel * 2;
             }         
           }
      }
    } @else {  
    .grid_#{$i} {
       width: $grid-instance-size * $i - $grid-margin-pixel * 2;
       }
    }  
      $grids:append($grids, unquote(".grid_#{$i}"), comma);   
    }
    
    #{$grids}{ 
      float:left;
      margin-top:$grid-margin-pixel * 2;
      margin-left:$grid-margin-pixel;
      margin-right:$grid-margin-pixel;
    }     
	  
}



@mixin grid_x_nomargin($size:$container-size, $cols:$grid-columns){
  
  $grid-instance-size: prc($size, $cols);	
	
	@for $j from 1 through $cols{
    @if $size < 481px{
      @if $size < 321px{
          .grid_#{$j}[class*='nomargin'] {
             width: $size;
           } 
                
      }@else{                    
	      $grid-half: half($j);      
	      
	      @if $grid-half > 6{ 
		      .grid_#{$j}[class*='nomargin'] {
		         width: $size;
		       }
	       }@else{    
	        .grid_#{$j}[class*='nomargin'] {
	           width: half($size);
	         }       
	       }
      }  
    } @else {  
    .grid_#{$j}[class*='nomargin'] {
       width: $grid-instance-size * $j;
      }
    }  
  }

}

@mixin grid_x_othermargin($size:$container-size, $cols:$grid-columns){
  
  $grid-instance-size: prc($size, $cols); 
  
  @for $j from 1 through $cols{
    @if $size < 481px{
      @if $size < 321px{
         .grid_#{$j}[class*='alpha'], .grid_#{$j}[class*='omega']{
             width: $size - 5px;
           }   
                
      }@else{                    
        $grid-half: half($j);      
        
        @if $grid-half > 6{ 
           .grid_#{$j}[class*='alpha'], .grid_#{$j}[class*='omega']{
               width: $size - 5px;
            }
         }@else{    
           .grid_#{$j}[class*='alpha'], .grid_#{$j}[class*='omega']{
              width: half($size) - 5px;
           }           
         }
      }  
    } @else {  
     .grid_#{$j}[class*='alpha'], .grid_#{$j}[class*='omega']{
        width: $grid-instance-size * $j - 5px;
       }
    }  
  }

}

